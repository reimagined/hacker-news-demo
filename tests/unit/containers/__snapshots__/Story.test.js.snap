// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Discuss { 'commentCount': 0 } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Discuss
    commentCount={0}
    id="story-id"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div />,
        <Link
          replace={false}
          to="/storyDetails/story-id"
>
          <styled.div>
                    discuss
          </styled.div>
</Link>,
        " ",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            discuss
</styled.div>,
          "replace": false,
          "to": "/storyDetails/story-id",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "discuss",
          },
          "ref": null,
          "rendered": "discuss",
          "type": [Function],
        },
        "type": [Function],
      },
      " ",
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div />,
          <Link
            replace={false}
            to="/storyDetails/story-id"
>
            <styled.div>
                        discuss
            </styled.div>
</Link>,
          " ",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              discuss
</styled.div>,
            "replace": false,
            "to": "/storyDetails/story-id",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "discuss",
            },
            "ref": null,
            "rendered": "discuss",
            "type": [Function],
          },
          "type": [Function],
        },
        " ",
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Discuss { 'commentCount': 1 } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Discuss
    commentCount={1}
    id="story-id"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div />,
        <Link
          replace={false}
          to="/storyDetails/story-id"
>
          <styled.div>
                    1 comment
          </styled.div>
</Link>,
        " ",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            1 comment
</styled.div>,
          "replace": false,
          "to": "/storyDetails/story-id",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "1 comment",
          },
          "ref": null,
          "rendered": "1 comment",
          "type": [Function],
        },
        "type": [Function],
      },
      " ",
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div />,
          <Link
            replace={false}
            to="/storyDetails/story-id"
>
            <styled.div>
                        1 comment
            </styled.div>
</Link>,
          " ",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              1 comment
</styled.div>,
            "replace": false,
            "to": "/storyDetails/story-id",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "1 comment",
            },
            "ref": null,
            "rendered": "1 comment",
            "type": [Function],
          },
          "type": [Function],
        },
        " ",
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Meta renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Meta
    commentCount={0}
    createdAt={1970-01-01T00:00:00.000Z}
    createdBy="user-id"
    createdByName="user"
    id="story-id"
    loggedIn={true}
    voted={true}
    votes={
        Array [
            "user-id",
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Score
          score={1}
/>,
        <PostedBy
          id="user-id"
          name="user"
/>,
        <span>
          17466 days ago
</span>,
        <span>
          <styled.div />
          <styled.div
                    onClick={undefined}
          >
                    unvote
          </styled.div>
           
</span>,
        <Discuss
          commentCount={0}
          id="story-id"
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "score": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "user-id",
          "name": "user",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "17466 days ago",
        },
        "ref": null,
        "rendered": "17466 days ago",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.div
              onClick={undefined}
>
              unvote
</styled.div>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "unvote",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "unvote",
            "type": [Function],
          },
          " ",
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 0,
          "id": "story-id",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Score
            score={1}
/>,
          <PostedBy
            id="user-id"
            name="user"
/>,
          <span>
            17466 days ago
</span>,
          <span>
            <styled.div />
            <styled.div
                        onClick={undefined}
            >
                        unvote
            </styled.div>
             
</span>,
          <Discuss
            commentCount={0}
            id="story-id"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "score": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "user-id",
            "name": "user",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "17466 days ago",
          },
          "ref": null,
          "rendered": "17466 days ago",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.div
                onClick={undefined}
>
                unvote
</styled.div>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "unvote",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "unvote",
              "type": [Function],
            },
            " ",
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 0,
            "id": "story-id",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Meta renders correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Meta
    commentCount={0}
    createdAt={1970-01-01T00:00:00.000Z}
    id="story-id"
    loggedIn={true}
    voted={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        null,
        null,
        <span>
          17466 days ago
</span>,
        <span>
          <styled.div />
          <styled.div
                    onClick={undefined}
          >
                    unvote
          </styled.div>
           
</span>,
        <Discuss
          commentCount={0}
          id="story-id"
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      null,
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "17466 days ago",
        },
        "ref": null,
        "rendered": "17466 days ago",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.div
              onClick={undefined}
>
              unvote
</styled.div>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "unvote",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "unvote",
            "type": [Function],
          },
          " ",
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 0,
          "id": "story-id",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          null,
          null,
          <span>
            17466 days ago
</span>,
          <span>
            <styled.div />
            <styled.div
                        onClick={undefined}
            >
                        unvote
            </styled.div>
             
</span>,
          <Discuss
            commentCount={0}
            id="story-id"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        null,
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "17466 days ago",
          },
          "ref": null,
          "rendered": "17466 days ago",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.div
                onClick={undefined}
>
                unvote
</styled.div>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "unvote",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "unvote",
              "type": [Function],
            },
            " ",
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 0,
            "id": "story-id",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PostedBy renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostedBy
    id="user-id"
    name="user"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "by ",
        <styled.a
          href="/user/user-id"
>
          user
</styled.a>,
        " ",
      ],
    },
    "ref": null,
    "rendered": Array [
      "by ",
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": "user",
          "href": "/user/user-id",
        },
        "ref": null,
        "rendered": "user",
        "type": [Function],
      },
      " ",
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "by ",
          <styled.a
            href="/user/user-id"
>
            user
</styled.a>,
          " ",
        ],
      },
      "ref": null,
      "rendered": Array [
        "by ",
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "user",
            "href": "/user/user-id",
          },
          "ref": null,
          "rendered": "user",
          "type": [Function],
        },
        " ",
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Score { 'score': 0 } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Score
    score={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        0,
        " ",
        "points",
        " ",
      ],
    },
    "ref": null,
    "rendered": Array [
      0,
      " ",
      "points",
      " ",
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          0,
          " ",
          "points",
          " ",
        ],
      },
      "ref": null,
      "rendered": Array [
        0,
        " ",
        "points",
        " ",
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Score { 'score': 1 } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Score
    score={1}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        1,
        " ",
        "point",
        " ",
      ],
    },
    "ref": null,
    "rendered": Array [
      1,
      " ",
      "point",
      " ",
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          1,
          " ",
          "point",
          " ",
        ],
      },
      "ref": null,
      "rendered": Array [
        1,
        " ",
        "point",
        " ",
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Story { commentCount: 1, text: "Text", showText: true } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Story
    loggedIn={true}
    showText={true}
    story={
        Object {
            "commentCount": 1,
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "link": "https://www.google.com",
            "text": "Text",
            "title": "Ask HN: Google",
            "type": "ask",
            "votes": Array [],
          }
    }
    userId="user-id"
    voted={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Title
          link="https://www.google.com"
          loggedIn={true}
          title="Ask HN: Ask HN: Google"
          upvoteStory={[Function]}
          voted={0}
/>,
        <Meta
          commentCount={1}
          createdAt={1970-01-01T00:00:00.000Z}
          createdBy="user-id"
          createdByName="user"
          id="story-id"
          loggedIn={true}
          unvoteStory={[Function]}
          voted={0}
          votes={Array []}
/>,
        <styled.div
          dangerouslySetInnerHTML={
                    Object {
                              "__html": "Text",
                            }
          }
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "link": "https://www.google.com",
          "loggedIn": true,
          "title": "Ask HN: Ask HN: Google",
          "upvoteStory": [Function],
          "voted": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 1,
          "createdAt": 1970-01-01T00:00:00.000Z,
          "createdBy": "user-id",
          "createdByName": "user",
          "id": "story-id",
          "loggedIn": true,
          "unvoteStory": [Function],
          "voted": 0,
          "votes": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "dangerouslySetInnerHTML": Object {
            "__html": "Text",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Title
            link="https://www.google.com"
            loggedIn={true}
            title="Ask HN: Ask HN: Google"
            upvoteStory={[Function]}
            voted={0}
/>,
          <Meta
            commentCount={1}
            createdAt={1970-01-01T00:00:00.000Z}
            createdBy="user-id"
            createdByName="user"
            id="story-id"
            loggedIn={true}
            unvoteStory={[Function]}
            voted={0}
            votes={Array []}
/>,
          <styled.div
            dangerouslySetInnerHTML={
                        Object {
                                    "__html": "Text",
                                  }
            }
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "link": "https://www.google.com",
            "loggedIn": true,
            "title": "Ask HN: Ask HN: Google",
            "upvoteStory": [Function],
            "voted": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 1,
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "loggedIn": true,
            "unvoteStory": [Function],
            "voted": 0,
            "votes": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "dangerouslySetInnerHTML": Object {
              "__html": "Text",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Story { type: 'ask' } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Story
    loggedIn={true}
    story={
        Object {
            "comments": Array [],
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "text": "Google",
            "title": "Ask HN: Google",
            "type": "ask",
            "votes": Array [],
          }
    }
    userId="user-id"
    voted={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Title
          link="/storyDetails/story-id"
          loggedIn={true}
          title="Ask HN: Ask HN: Google"
          upvoteStory={[Function]}
          voted={0}
/>,
        <Meta
          commentCount={0}
          createdAt={1970-01-01T00:00:00.000Z}
          createdBy="user-id"
          createdByName="user"
          id="story-id"
          loggedIn={true}
          unvoteStory={[Function]}
          voted={0}
          votes={Array []}
/>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "link": "/storyDetails/story-id",
          "loggedIn": true,
          "title": "Ask HN: Ask HN: Google",
          "upvoteStory": [Function],
          "voted": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 0,
          "createdAt": 1970-01-01T00:00:00.000Z,
          "createdBy": "user-id",
          "createdByName": "user",
          "id": "story-id",
          "loggedIn": true,
          "unvoteStory": [Function],
          "voted": 0,
          "votes": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Title
            link="/storyDetails/story-id"
            loggedIn={true}
            title="Ask HN: Ask HN: Google"
            upvoteStory={[Function]}
            voted={0}
/>,
          <Meta
            commentCount={0}
            createdAt={1970-01-01T00:00:00.000Z}
            createdBy="user-id"
            createdByName="user"
            id="story-id"
            loggedIn={true}
            unvoteStory={[Function]}
            voted={0}
            votes={Array []}
/>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "link": "/storyDetails/story-id",
            "loggedIn": true,
            "title": "Ask HN: Ask HN: Google",
            "upvoteStory": [Function],
            "voted": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 0,
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "loggedIn": true,
            "unvoteStory": [Function],
            "voted": 0,
            "votes": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Story { type: 'ask' } renders correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Story
    loggedIn={true}
    story={
        Object {
            "comments": Array [
              Object {
                "createdAt": 1970-01-01T00:00:00.000Z,
                "createdBy": "user-id",
                "createdByNane": "user",
                "id": "comment-id",
                "parentId": "story-id",
                "text": "comment",
              },
            ],
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "link": "https://www.google.com",
            "title": "Ask HN: Google",
            "type": "ask",
            "votes": Array [],
          }
    }
    userId="user-id"
    voted={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Title
          link="https://www.google.com"
          loggedIn={true}
          title="Ask HN: Ask HN: Google"
          upvoteStory={[Function]}
          voted={0}
/>,
        <Meta
          commentCount={1}
          createdAt={1970-01-01T00:00:00.000Z}
          createdBy="user-id"
          createdByName="user"
          id="story-id"
          loggedIn={true}
          unvoteStory={[Function]}
          voted={0}
          votes={Array []}
/>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "link": "https://www.google.com",
          "loggedIn": true,
          "title": "Ask HN: Ask HN: Google",
          "upvoteStory": [Function],
          "voted": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 1,
          "createdAt": 1970-01-01T00:00:00.000Z,
          "createdBy": "user-id",
          "createdByName": "user",
          "id": "story-id",
          "loggedIn": true,
          "unvoteStory": [Function],
          "voted": 0,
          "votes": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Title
            link="https://www.google.com"
            loggedIn={true}
            title="Ask HN: Ask HN: Google"
            upvoteStory={[Function]}
            voted={0}
/>,
          <Meta
            commentCount={1}
            createdAt={1970-01-01T00:00:00.000Z}
            createdBy="user-id"
            createdByName="user"
            id="story-id"
            loggedIn={true}
            unvoteStory={[Function]}
            voted={0}
            votes={Array []}
/>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "link": "https://www.google.com",
            "loggedIn": true,
            "title": "Ask HN: Ask HN: Google",
            "upvoteStory": [Function],
            "voted": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 1,
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "loggedIn": true,
            "unvoteStory": [Function],
            "voted": 0,
            "votes": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Story { type: 'story' } with componentDidUpdate renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Story
    loggedIn={true}
    onRefetched={[Function]}
    refetch={[Function]}
    refetchStory={true}
    story={
        Object {
            "comments": Array [],
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "link": "https://google.com",
            "title": "Google",
            "type": "story",
            "votes": Array [],
          }
    }
    voted={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Title
          link="https://google.com"
          loggedIn={true}
          title="Google"
          upvoteStory={[Function]}
          voted={0}
/>,
        <Meta
          commentCount={0}
          createdAt={1970-01-01T00:00:00.000Z}
          createdBy="user-id"
          createdByName="user"
          id="story-id"
          loggedIn={true}
          unvoteStory={[Function]}
          voted={0}
          votes={Array []}
/>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "link": "https://google.com",
          "loggedIn": true,
          "title": "Google",
          "upvoteStory": [Function],
          "voted": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "commentCount": 0,
          "createdAt": 1970-01-01T00:00:00.000Z,
          "createdBy": "user-id",
          "createdByName": "user",
          "id": "story-id",
          "loggedIn": true,
          "unvoteStory": [Function],
          "voted": 0,
          "votes": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Title
            link="https://google.com"
            loggedIn={true}
            title="Google"
            upvoteStory={[Function]}
            voted={0}
/>,
          <Meta
            commentCount={0}
            createdAt={1970-01-01T00:00:00.000Z}
            createdBy="user-id"
            createdByName="user"
            id="story-id"
            loggedIn={true}
            unvoteStory={[Function]}
            voted={0}
            votes={Array []}
/>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "link": "https://google.com",
            "loggedIn": true,
            "title": "Google",
            "upvoteStory": [Function],
            "voted": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "commentCount": 0,
            "createdAt": 1970-01-01T00:00:00.000Z,
            "createdBy": "user-id",
            "createdByName": "user",
            "id": "story-id",
            "loggedIn": true,
            "unvoteStory": [Function],
            "voted": 0,
            "votes": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Title { external link } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Title
    link="https://google.com"
    loggedIn={true}
    title="Title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div
          onClick={undefined}
          title="upvote"
/>,
        <span>
          <styled.div>
                    <a
                              href="https://google.com"
                    >
                              Title
                    </a>
          </styled.div>
           
          (
          google.com
          )
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "onClick": undefined,
          "title": "upvote",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <styled.div>
              <a
                            href="https://google.com"
              >
                            Title
              </a>
</styled.div>,
            " ",
            "(",
            "google.com",
            ")",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <a
                href="https://google.com"
>
                Title
</a>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Title",
                "href": "https://google.com",
              },
              "ref": null,
              "rendered": "Title",
              "type": "a",
            },
            "type": [Function],
          },
          " ",
          "(",
          "google.com",
          ")",
        ],
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div
            onClick={undefined}
            title="upvote"
/>,
          <span>
            <styled.div>
                        <a
                                    href="https://google.com"
                        >
                                    Title
                        </a>
            </styled.div>
             
            (
            google.com
            )
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "onClick": undefined,
            "title": "upvote",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <styled.div>
                <a
                                href="https://google.com"
                >
                                Title
                </a>
</styled.div>,
              " ",
              "(",
              "google.com",
              ")",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  href="https://google.com"
>
                  Title
</a>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Title",
                  "href": "https://google.com",
                },
                "ref": null,
                "rendered": "Title",
                "type": "a",
              },
              "type": [Function],
            },
            " ",
            "(",
            "google.com",
            ")",
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Title { external link with www } renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Title
    link="https://www.google.com"
    loggedIn={true}
    title="Title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div
          onClick={undefined}
          title="upvote"
/>,
        <span>
          <styled.div>
                    <a
                              href="https://www.google.com"
                    >
                              Title
                    </a>
          </styled.div>
           
          (
          www.google.com
          )
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "onClick": undefined,
          "title": "upvote",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <styled.div>
              <a
                            href="https://www.google.com"
              >
                            Title
              </a>
</styled.div>,
            " ",
            "(",
            "www.google.com",
            ")",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <a
                href="https://www.google.com"
>
                Title
</a>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Title",
                "href": "https://www.google.com",
              },
              "ref": null,
              "rendered": "Title",
              "type": "a",
            },
            "type": [Function],
          },
          " ",
          "(",
          "www.google.com",
          ")",
        ],
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div
            onClick={undefined}
            title="upvote"
/>,
          <span>
            <styled.div>
                        <a
                                    href="https://www.google.com"
                        >
                                    Title
                        </a>
            </styled.div>
             
            (
            www.google.com
            )
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "onClick": undefined,
            "title": "upvote",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <styled.div>
                <a
                                href="https://www.google.com"
                >
                                Title
                </a>
</styled.div>,
              " ",
              "(",
              "www.google.com",
              ")",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  href="https://www.google.com"
>
                  Title
</a>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Title",
                  "href": "https://www.google.com",
                },
                "ref": null,
                "rendered": "Title",
                "type": "a",
              },
              "type": [Function],
            },
            " ",
            "(",
            "www.google.com",
            ")",
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Title renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Title
    link="/story/story-id"
    loggedIn={true}
    title="Title"
    voted={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div
          hidden={true}
/>,
        <styled.div>
          <Link
                    replace={false}
                    to="/story/story-id"
          >
                    Title
          </Link>
</styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "hidden": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Link
            replace={false}
            to="/story/story-id"
>
            Title
</Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Title",
            "replace": false,
            "to": "/story/story-id",
          },
          "ref": null,
          "rendered": "Title",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div
            hidden={true}
/>,
          <styled.div>
            <Link
                        replace={false}
                        to="/story/story-id"
            >
                        Title
            </Link>
</styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "hidden": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Link
              replace={false}
              to="/story/story-id"
>
              Title
</Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Title",
              "replace": false,
              "to": "/story/story-id",
            },
            "ref": null,
            "rendered": "Title",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Upvote { hidden: true} renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <styled.div
    Upvote={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "className": "sc-EHOje kIGcup",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "className": "sc-EHOje kIGcup",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Upvote renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <styled.div />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "className": "sc-EHOje kIGcup",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "className": "sc-EHOje kIGcup",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`getHostname renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <getHostname
    link="http://www.google.com"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "link": "http://www.google.com",
    },
    "ref": null,
    "rendered": null,
    "type": "getHostname",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "link": "http://www.google.com",
      },
      "ref": null,
      "rendered": null,
      "type": "getHostname",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
